--- mysql-workbench-community-6.3.10-src/plugins/migration/copytable/copytable.cpp.orig	2017-11-09 17:11:42.000000000 +0100
+++ mysql-workbench-community-6.3.10-src/plugins/migration/copytable/copytable.cpp	2018-03-02 20:07:46.147102294 +0100
@@ -109,8 +109,10 @@ static const char *mysql_field_type_to_n
       return "MYSQL_TYPE_STRING";
     case MYSQL_TYPE_GEOMETRY:
       return "MYSQL_TYPE_GEOMETRY";
+#ifdef MYSQL_TYPE_JSON
     case MYSQL_TYPE_JSON:
       return "MYSQL_TYPE_JSON";
+#endif
     default:
       return "UNKNOWN";
   }
@@ -295,7 +297,9 @@ RowBuffer::RowBuffer(std::shared_ptr<std
       case MYSQL_TYPE_STRING:
       case MYSQL_TYPE_VAR_STRING:
       case MYSQL_TYPE_BIT:
+#ifdef MYSQL_TYPE_JSON
       case MYSQL_TYPE_JSON:
+#endif
         if (!col->is_long_data)
           bind.buffer_length = (unsigned)col->source_length + 1;
 
@@ -1392,7 +1396,11 @@ bool MySQLCopyDataSource::fetch_row(RowB
               rowbuffer[index].buffer_type == MYSQL_TYPE_MEDIUM_BLOB ||
               rowbuffer[index].buffer_type == MYSQL_TYPE_LONG_BLOB || rowbuffer[index].buffer_type == MYSQL_TYPE_BLOB ||
               rowbuffer[index].buffer_type == MYSQL_TYPE_STRING ||
-              rowbuffer[index].buffer_type == MYSQL_TYPE_GEOMETRY || rowbuffer[index].buffer_type == MYSQL_TYPE_JSON) {
+              rowbuffer[index].buffer_type == MYSQL_TYPE_GEOMETRY
+#ifdef MYSQL_TYPE_JSON
+              || rowbuffer[index].buffer_type == MYSQL_TYPE_JSON
+#endif
+              ){
             if (rowbuffer[index].buffer_length)
               free(rowbuffer[index].buffer);
 
@@ -2162,7 +2170,9 @@ bool MySQLCopyDataTarget::append_bulk_co
       case MYSQL_TYPE_STRING:
       case MYSQL_TYPE_ENUM:
       case MYSQL_TYPE_SET:
+#ifdef MYSQL_TYPE_JSON
       case MYSQL_TYPE_JSON:
+#endif
         _bulk_insert_record.append("'", 1);
         ret_val = _bulk_insert_record.append_escaped((char *)(*_row_buffer)[col_index].buffer,
                                                      *(*_row_buffer)[col_index].length);
